name: Notify n8n on release and Update Version

on:
  release:
    types: [published]

jobs:
  notify-n8n:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout target branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.target_commitish }}
        fetch-depth: 0

    - name: Pull latest changes
      run: git pull

    - name: Get previous tag
      id: get_previous_tag
      run: |
        previous_tag=$(git describe --tags --abbrev=0 ${{ github.event.release.tag_name }}^ 2>/dev/null || echo "")
        echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT

    - name: Get commit list between releases
      id: get_commits
      run: |
        new_tag="${{ github.event.release.tag_name }}"
        old_tag="${{ steps.get_previous_tag.outputs.previous_tag }}"

        if [ -z "$old_tag" ]; then
          echo "No previous tag found, using initial commit."
          commits=$(git log $new_tag --pretty=format:"- %s (%h)")
        else
          echo "Getting commits between $old_tag and $new_tag"
          commits=$(git log $old_tag..$new_tag --pretty=format:"- %s (%h)")
        fi
        
        echo "commits<<EOF" >> $GITHUB_OUTPUT
        echo "$commits" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v4
    - run: |
          VERSION_NUMBER=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          FILE_PATH="config/settings_schema.json"
          jq --arg version "$VERSION_NUMBER" 'map(if .name == "theme_info" then .theme_version = $version else . end)' "$FILE_PATH" > tmp.json
          mv tmp.json "$FILE_PATH"
          echo "Updated $FILE_PATH to $VERSION_NUMBER"
          git config user.name "remimata"
          git config user.email "remi.mata13@gmail.com"
          git add config/settings_schema.json
          
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Chore: Update theme version to ${{ github.event.release.tag_name }}"
            git remote set-url origin https://x-access-token:$PERSONAL_GH_TOKEN@github.com/remimata/githubActions.git
            git pull --rebase
            git push origin HEAD:${{ github.event.release.target_commitish }}
          fi        
        
    - name: Send to n8n webhook
      run: |
        payload=$(jq -n \
          --arg tag "${{ github.event.release.tag_name }}" \
          --arg body "${{ github.event.release.body }}" \
          --arg commits "${{ steps.get_commits.outputs.commits }}" \
          '{tag: $tag, release_notes: $body, commits: $commits}')
          
        curl -X POST \
             -H "Content-Type: application/json" \
             -d "$payload" \
             "${{ secrets.N8N_RELEASE_WEBHOOK }}"
